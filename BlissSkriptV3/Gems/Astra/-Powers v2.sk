#ᴀsᴛʀᴀ ɢᴇᴍ




every 1 second:
	loop all players:
		set {_uuid} to uuid of loop-player
		
		if loop-player's off hand item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			send action bar "<##501089>🔺%{Astra.Power2.Enchanting.Display.%{_uuid}%}%" to loop-player

		if loop-player's held item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":  
			send action bar "<##501089>🔺%{Astra.Power2.Enchanting.Display.%{_uuid}%}%" to loop-player
		



		if loop-player's off hand item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":

			send action bar "%{Astra.Power1.Daggers.Display.%{_uuid}%}% <##501089>🔮 %{entity3.%loop-player%}%  &f%{Astra.Power3.Projection.Display.%{_uuid}%}%" to loop-player
		
		if loop-player's held item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			send action bar "%{Astra.Power1.Daggers.Display.%{_uuid}%}% <##501089>🔮 %{entity3.%loop-player%}%  &f%{Astra.Power3.Projection.Display.%{_uuid}%}%" to loop-player



every 1 second:
	loop all players:
		if loop-player has a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			set {_uuid} to uuid of loop-player

			#Daggers
			
			if {Astra.Power1.Daggers.Second.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true

			if {Astra.Power1.Daggers.Minute.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true

			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true

			if {Astra.Power1.Daggers.Display.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &b%{Astra.Power1.Daggers.Minute.%{_uuid}%}%m %{Astra.Power1.Daggers.Second.%{_uuid}%}%s"
				
		
			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is true:
				if {Astra.Power1.Daggers.Minute.%{_uuid}%} is 0:
					set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &b%{Astra.Power1.Daggers.Second.%{_uuid}%}%s"

				else:
					set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &b%{Astra.Power1.Daggers.Minute.%{_uuid}%}%m %{Astra.Power1.Daggers.Second.%{_uuid}%}%s"


			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is true:
				remove 1 from {Astra.Power1.Daggers.Second.%{_uuid}%}



			if {Astra.Power1.Daggers.Second.%{_uuid}%} < 0:
				remove 1 from {Astra.Power1.Daggers.Minute.%{_uuid}%}
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 59
                
			if {Astra.Power1.Daggers.Minute.%{_uuid}%} < 0: 
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to false
				set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &aReady!"


			#Enchanting

			if {Astra.Power2.Enchanting.Second.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true

			if {Astra.Power2.Enchanting.Minute.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true



			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true	
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to " &b%{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Display.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true	

			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is true:
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to "&b %{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Display.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to " &b %{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is true:
				if {Astra.Power2.Enchanting.Minute.%{_uuid}%} is 0:
					set {Astra.Power2.Enchanting.Display.%{_uuid}%} to "&b %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

				else:
					set {Astra.Power2.Enchanting.Display.%{_uuid}%} to "&b %{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is true:
				remove 1 from {Astra.Power2.Enchanting.Second.%{_uuid}%}


			
			if {Astra.Power2.Enchanting.Second.%{_uuid}%} < 0:
				remove 1 from {Astra.Power2.Enchanting.Minute.%{_uuid}%}
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 59
                
			if {Astra.Power2.Enchanting.Minute.%{_uuid}%} < 0:
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to false
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to " &aReady!"



			#Projection





			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is true:
				remove 1 from {Astra.Power3.Projection.Second.%{_uuid}%}


			
			if {Astra.Power3.Projection.Second.%{_uuid}%} < 0:
				remove 1 from {Astra.Power3.Projection.Minute.%{_uuid}%}
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 59


			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is true:
				if {Astra.Power3.Projection.Minute.%{_uuid}%} is 0:
					set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Second.%{_uuid}%}%s"

				else:
					set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Minute.%{_uuid}%}%m %{Astra.Power3.Projection.Second.%{_uuid}%}%s"


			if {Astra.Power3.Projection.Second.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0

			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to true	
				set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Minute.%{_uuid}%}%m %{Astra.Power3.Projection.Second.%{_uuid}%}%s"

			if {Astra.Power3.Projection.Display.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to true	



			if {Astra.Power3.Projection.Display.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Minute.%{_uuid}%}%m %{Astra.Power3.Projection.Second.%{_uuid}%}%s"

                




			if {Astra.Power3.Projection.Minute.%{_uuid}%} < 0:
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to false
				set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &aReady!"



			# Set Stuff

			if {entity3.%loop-player%} is not set:
				set {entity3.%loop-player%} to ""


			if loop-player's off hand item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
				send action bar "<##501089>🔺%{Astra.Power2.Enchanting.Display.%{_uuid}%}%" to loop-player

			if loop-player's held item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":  
				send action bar "<##501089>🔺%{Astra.Power2.Enchanting.Display.%{_uuid}%}%" to loop-player
		



			if loop-player's off hand item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":

				send action bar "%{Astra.Power1.Daggers.Display.%{_uuid}%}% <##501089>🔮 %{entity3.%loop-player%}%  &f%{Astra.Power3.Projection.Display.%{_uuid}%}%" to loop-player
		
			if loop-player's held item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
				send action bar "%{Astra.Power1.Daggers.Display.%{_uuid}%}% <##501089>🔮 %{entity3.%loop-player%}%  &f%{Astra.Power3.Projection.Display.%{_uuid}%}%" to loop-player











every 1 second:
	loop all players:
		if loop-player has a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			set {_uuid} to uuid of loop-player

			#Daggers
			
			if {Astra.Power1.Daggers.Second.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true

			if {Astra.Power1.Daggers.Minute.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true

			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 0
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true

			if {Astra.Power1.Daggers.Display.%{_uuid}%} is not set:
				set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &b%{Astra.Power1.Daggers.Minute.%{_uuid}%}%m %{Astra.Power1.Daggers.Second.%{_uuid}%}%s"
				
		
			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is true:
				if {Astra.Power1.Daggers.Minute.%{_uuid}%} is 0:
					set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &b%{Astra.Power1.Daggers.Second.%{_uuid}%}%s"

				else:
					set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &b%{Astra.Power1.Daggers.Minute.%{_uuid}%}%m %{Astra.Power1.Daggers.Second.%{_uuid}%}%s"


			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is true:
				remove 1 from {Astra.Power1.Daggers.Second.%{_uuid}%}



			if {Astra.Power1.Daggers.Second.%{_uuid}%} < 0:
				remove 1 from {Astra.Power1.Daggers.Minute.%{_uuid}%}
				set {Astra.Power1.Daggers.Second.%{_uuid}%} to 59
                
			if {Astra.Power1.Daggers.Minute.%{_uuid}%} < 0: 
				set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to false
				set {Astra.Power1.Daggers.Display.%{_uuid}%} to "🔪 &aReady!"


			#Enchanting

			if {Astra.Power2.Enchanting.Second.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true

			if {Astra.Power2.Enchanting.Minute.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true



			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true	
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to " &b%{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Display.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Minute.%{_uuid}%} to 0
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to true	

			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is true:
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to "&b %{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Display.%{_uuid}%} is not set:
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to " &b %{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is true:
				if {Astra.Power2.Enchanting.Minute.%{_uuid}%} is 0:
					set {Astra.Power2.Enchanting.Display.%{_uuid}%} to "&b %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

				else:
					set {Astra.Power2.Enchanting.Display.%{_uuid}%} to "&b %{Astra.Power2.Enchanting.Minute.%{_uuid}%}%m %{Astra.Power2.Enchanting.Second.%{_uuid}%}%s"

			if {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} is true:
				remove 1 from {Astra.Power2.Enchanting.Second.%{_uuid}%}


			
			if {Astra.Power2.Enchanting.Second.%{_uuid}%} < 0:
				remove 1 from {Astra.Power2.Enchanting.Minute.%{_uuid}%}
				set {Astra.Power2.Enchanting.Second.%{_uuid}%} to 59
                
			if {Astra.Power2.Enchanting.Minute.%{_uuid}%} < 0:
				set {Astra.Power2.Enchanting.Cooldown.%{_uuid}%} to false
				set {Astra.Power2.Enchanting.Display.%{_uuid}%} to " &aReady!"



			#Projection





			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is true:
				remove 1 from {Astra.Power3.Projection.Second.%{_uuid}%}


			
			if {Astra.Power3.Projection.Second.%{_uuid}%} < 0:
				remove 1 from {Astra.Power3.Projection.Minute.%{_uuid}%}
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 59


			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is true:
				if {Astra.Power3.Projection.Minute.%{_uuid}%} is 0:
					set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Second.%{_uuid}%}%s"

				else:
					set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Minute.%{_uuid}%}%m %{Astra.Power3.Projection.Second.%{_uuid}%}%s"


			if {Astra.Power3.Projection.Second.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0

			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to true	
				set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Minute.%{_uuid}%}%m %{Astra.Power3.Projection.Second.%{_uuid}%}%s"

			if {Astra.Power3.Projection.Display.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to true	



			if {Astra.Power3.Projection.Display.%{_uuid}%} is not set:
				set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &b%{Astra.Power3.Projection.Minute.%{_uuid}%}%m %{Astra.Power3.Projection.Second.%{_uuid}%}%s"

                




			if {Astra.Power3.Projection.Minute.%{_uuid}%} < 0:
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to false
				set {Astra.Power3.Projection.Display.%{_uuid}%} to "👻 &aReady!"



			# Set Stuff

			if {entity3.%loop-player%} is not set:
				set {entity3.%loop-player%} to ""




			if loop-player's off hand item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
				send action bar "<##501089>🔺%{Astra.Power2.Enchanting.Display.%{_uuid}%}%" to loop-player

			if loop-player's held item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":  
				send action bar "<##501089>🔺%{Astra.Power2.Enchanting.Display.%{_uuid}%}%" to loop-player
		



			if loop-player's off hand item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":

				send action bar "%{Astra.Power1.Daggers.Display.%{_uuid}%}% <##501089>🔮 %{entity3.%loop-player%}%  &f%{Astra.Power3.Projection.Display.%{_uuid}%}%" to loop-player
		
			if loop-player's held item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
				send action bar "%{Astra.Power1.Daggers.Display.%{_uuid}%}% <##501089>🔮 %{entity3.%loop-player%}%  &f%{Astra.Power3.Projection.Display.%{_uuid}%}%" to loop-player








on right click on player:
	if {ghoost...%player%} is true:
		if player's held item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			if {AstraProjection.%player%} is true:
				execute console command "tp @a[name=""%player%""] @e[tag=%player%Astra,limit=1]"
				execute console command "gamemode survival %player%"
				execute console command "execute as %player% at @s run item"
				execute console command "tag @a[tag=astrapart] remove astrapart"
				set {AstraProjection.%player%} to false
				set {Tag..%event-entity%} to 10
				wait 2 ticks
				execute console command "item replace entity @e[tag=%player%Astra] weapon.mainhand with air"
				execute console command "item replace entity @e[tag=%player%Astra] weapon.offhand with air"
				execute console command "kill @e[tag=%player%Astra]"





on join:
	set {Tag..%player%} to 0






on right click:
	set {_uuid} to uuid of player 
	if player's held item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		set {_uuid} to uuid of player
		if {Tag..%player%} is 0:
			set {_uuid} to uuid of player 
			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is true:
				execute console command "tp @a[name=""%player%""] @e[tag=%player%Astra,limit=1]"
				execute console command "gamemode survival %player%"
				execute console command "execute as %player% at @s run item"
				execute console command "tag @a[tag=astrapart] remove astrapart"
				wait 2 ticks
				execute console command "item replace entity @e[tag=%player%Astra] weapon.mainhand with air"
				execute console command "item replace entity @e[tag=%player%Astra] weapon.offhand with air"
				execute console command "kill @e[tag=%player%Astra]"
				send "👻 &5Astra Projection &fis on cooldown for &b%{Astra.Power3.Projection.Second.%{_uuid}%}%" to player
			if {Astra.Power3.Projection.Cooldown.%{_uuid}%} is false:
				spawn zombie at location of player
				set name of last spawned entity to "%player%"
				apply slowness 99 to last spawned entity for 2 minutes
				execute console command "item replace entity @e[name=""%player%""] armor.head from entity %player% armor.head"
				execute console command "item replace entity @e[name=""%player%""] armor.chest from entity %player% armor.chest"
				execute console command "item replace entity @e[name=""%player%""] armor.legs from entity %player% armor.legs"
				execute console command "item replace entity @e[name=""%player%""] armor.feet from entity %player% armor.feet"
				execute console command "item replace entity @e[name=""%player%""] weapon.mainhand from entity %player% weapon.mainhand"
				execute console command "item replace entity @e[name=""%player%""] weapon.offhand from entity %player% weapon.offhand"
				execute console command "tag @e[name=%player%] add %player%Astra"
				execute console command "tag %player% remove %player%Astra"
				execute console command "tag %player% add astrapart"
				set player's gamemode to spectator
				set {_uuid} to uuid of player
				set {Astra.Power3.Projection.Second.%{_uuid}%} to 30
				set {Astra.Power3.Projection.Minute.%{_uuid}%} to 0
				set {Astra.Power3.Projection.Cooldown.%{_uuid}%} to true

on teleport:
	if player's gamemode is spectator:
		cancel event
		
on damage:
	if victim is a zombie:
		execute console command "tp @a[name=""%victim%""] @e[tag=%victim%Astra,limit=1]"
		execute console command "gamemode survival %victim%"
		execute console command "execute as %victim% at @s run item"
		execute console command "tag @a[tag=astrapart] remove astrapart"
		wait 2 ticks
		execute console command "item replace entity @e[tag=%victim%Astra] weapon.mainhand with air"
		execute console command "item replace entity @e[tag=%victim%Astra] weapon.offhand with air"
		execute console command "kill @e[tag=%victim%Astra]"




every 8 tick:
	loop all players:
		set {_uuid} to uuid of loop-player
		if {Daggers.on.%{_uuid}%} is not true:
			if {DaggerBarPro::%loop-player%} is not 0:
				remove 1 from {DaggerBarPro::%loop-player%}
				set bar progress of {DaggerBar::%loop-player%} to {DaggerBarPro::%loop-player%}
			if {DaggerBarPro::%loop-player%} < 1:
				if {Daggers..%loop-player%} is not false:
					set {DaggerBarPro::%loop-player%} to 9999999999999999
					remove loop-player from bar players of {DaggerBar::%loop-player%}
					kill {Dag1::%loop-player%}
					kill {Dag2::%loop-player%}
					kill {Dag3::%loop-player%}
					kill {Dag4::%loop-player%}
					kill {Dag5::%loop-player%}
					set {ShootDaggers..%loop-player%} to -1
					set {Daggers..%loop-player%} to false








on left click:
	if player's held item is prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		set {_uuid} to uuid of player
		if {Tag..%player%} is 0:
			if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is true:
				if {Astra.Power1.Daggers.Minute.%{_uuid}%} > 1 :
					if {Daggers.on.%{_uuid}%} is true:
						send "<##501089>🔮 &cYour &rUnbounded &cskill is on cooldown for &5%{Astra.Power1.Daggers.Minute.%{_uuid}%}%m %{Astra.Power1.Daggers.Second.%{_uuid}%}%s"
				else:
					if {Daggers.on.%{_uuid}%} is true:
						send "<##501089>🔮 &cYour &rUnbounded &cskill is on cooldown for &5%{Astra.Power1.Daggers.Second.%{_uuid}%}%s"
			if {Tag..%player%} is 0:
				if {Astra.Power1.Daggers.Cooldown.%{_uuid}%} is false:
					broadcast "yes"
					wait 1 tick
					send "<##A01FFF>🔮 <##B2FFF6>You have used your <##CCCCCC>Unbounded <##B2FFF6>skill" to player
					if {Bliss.Astra.%player%} > 3:
						set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 2
						set {Astra.Power1.Daggers.Second.%{_uuid}%} to 30
						set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true
					if {Bliss.Astra.%player%} is 3:
						set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 2
						set {Astra.Power1.Daggers.Second.%{_uuid}%} to 30
						set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true
					if {Bliss.Astra.%player%} < 3:
						set {Astra.Power1.Daggers.Minute.%{_uuid}%} to 2
						set {Astra.Power1.Daggers.Second.%{_uuid}%} to 30
						set {Astra.Power1.Daggers.Cooldown.%{_uuid}%} to true
					set {DaggerBar::%player%} to bossbar named "%player%sdaggers" with title "&fDaggers" with color blue with style solid with progress 100
					add player to bossbar players of {DaggerBar::%player%}
					set {DaggerBarPro::%player%} to 100
					set {Daggers..%player%} to true
					set {ShootDaggers..%player%} to 6
					set {Daggers.on.%{_uuid}%} to true
					spawn armor stand at location of player with nbt compound from "{Invisible:1b,Invulnerable:1b,Marker:1b}"
					set {Dagger1::%last spawned entity%} to true
					set {Dag1::%player%} to last spawned entity
					set last spawned entity's helmet to nautilus shell of mending with custom model data 230
					spawn armor stand at location of player with nbt compound from "{Invisible:1b,Invulnerable:1b,Marker:1b}"
					set {Dagger2::%last spawned entity%} to true
					set {Dag2::%player%} to last spawned entity
					set last spawned entity's helmet to nautilus shell of mending with custom model data 230
					spawn armor stand at location of player with nbt compound from "{Invisible:1b,Invulnerable:1b,Marker:1b}"
					set {Dagger3::%last spawned entity%} to true
					set {Dag3::%player%} to last spawned entity
					set last spawned entity's helmet to nautilus shell of mending with custom model data 230
					spawn armor stand at location of player with nbt compound from "{Invisible:1b,Invulnerable:1b,Marker:1b}"
					set {Dagger4::%last spawned entity%} to true
					set {Dag4::%player%} to last spawned entity
					set last spawned entity's helmet to nautilus shell of mending with custom model data 230
					spawn armor stand at location of player with nbt compound from "{Invisible:1b,Invulnerable:1b,Marker:1b}"
					set {Dagger5::%last spawned entity%} to true
					set {Dag5::%player%} to last spawned entity
					set last spawned entity's helmet to nautilus shell of mending with custom model data 230




every 1 tick:
	loop all players:
		set {_uuid} to uuid of loop-player
		if {Daggers.on.%{_uuid}%} is true:
			if {ShootDaggers..%loop-player%} > 5:
				set {Dagg1::%loop-player%} to location 1.6 blocks infront of loop-player
				set {Dagg2::%loop-player%} to location 1.2 blocks to the right and 1.4 blocks infront of loop-player
				set {Dagg3::%loop-player%} to location 1.2 blocks to the left and 1.4 blocks infront of loop-player
				set {Dagg4::%loop-player%} to location 1.4 blocks to the right and 0.2 blocks infront of loop-player
				set {Dagg5::%loop-player%} to location 1.4 blocks to the left and 0.2 blocks infront of loop-player
				loop all entities in radius 200 of loop-player:
					if {Dagger1::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg1::%loop-player%}
					if {Dagger2::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg2::%loop-player%}
					if {Dagger3::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg3::%loop-player%}
					if {Dagger4::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg4::%loop-player%}
					if {Dagger5::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg5::%loop-player%}

			if {ShootDaggers..%loop-player%} is 5:
				add 0.05 to {dagger1add::%loop-player%}
				set {Dagg1::%loop-player%} to location {dagger1add::%loop-player%} blocks infront of {Dagg1::%loop-player%}
				set {Dagg2::%loop-player%} to location 1.2 blocks to the right and 1.4 blocks infront of loop-player
				set {Dagg3::%loop-player%} to location 1.2 blocks to the left and 1.4 blocks infront of loop-player
				set {Dagg4::%loop-player%} to location 1.4 blocks to the right and 0.2 blocks infront of loop-player
				set {Dagg5::%loop-player%} to location 1.4 blocks to the left and 0.2 blocks infront of loop-player
				loop all entities in radius 200 of loop-player:
					if {Dagger1::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg1::%loop-player%}
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
					if {Dagger2::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg2::%loop-player%}
					if {Dagger3::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg3::%loop-player%}
					if {Dagger4::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg4::%loop-player%}
					if {Dagger5::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg5::%loop-player%}

			if {ShootDaggers..%loop-player%} is 4:
				add 0.05 to {dagger1add::%loop-player%}
				add 0.05 to {dagger2add::%loop-player%}
				set {Dagg1::%loop-player%} to location {dagger1add::%loop-player%} blocks infront of {Dagg1::%loop-player%}
				set {Dagg2::%loop-player%} to location {dagger2add::%loop-player%} blocks infront of {Dagg2::%loop-player%}
				set {Dagg3::%loop-player%} to location 1.2 blocks to the left and 1.4 blocks infront of loop-player
				set {Dagg4::%loop-player%} to location 1.4 blocks to the right and 0.2 blocks infront of loop-player
				set {Dagg5::%loop-player%} to location 1.4 blocks to the left and 0.2 blocks infront of loop-player
				loop all entities in radius 200 of loop-player:
					if {Dagger1::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg1::%loop-player%}
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
					if {Dagger2::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg2::%loop-player%}
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
					if {Dagger3::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg3::%loop-player%}
					if {Dagger4::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg4::%loop-player%}
					if {Dagger5::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg5::%loop-player%}
	
			if {ShootDaggers..%loop-player%} is 3:
				add 0.05 to {dagger1add::%loop-player%}
				add 0.05 to {dagger2add::%loop-player%}
				add 0.05 to {dagger3add::%loop-player%}
				set {Dagg1::%loop-player%} to location {dagger1add::%loop-player%} blocks infront of {Dagg1::%loop-player%}
				set {Dagg2::%loop-player%} to location {dagger2add::%loop-player%} blocks infront of {Dagg2::%loop-player%}
				set {Dagg3::%loop-player%} to location {dagger3add::%loop-player%} blocks infront of {Dagg3::%loop-player%}
				set {Dagg4::%loop-player%} to location 1.4 blocks to the right and 0.2 blocks infront of loop-player
				set {Dagg5::%loop-player%} to location 1.4 blocks to the left and 0.2 blocks infront of loop-player
				loop all entities in radius 200 of loop-player:
					if {Dagger1::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg1::%loop-player%}
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
					if {Dagger2::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg2::%loop-player%}
					if {Dagger3::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg3::%loop-player%}
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
					if {Dagger4::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg4::%loop-player%}
					if {Dagger5::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg5::%loop-player%}
	
			if {ShootDaggers..%loop-player%} is 2:
				add 0.05 to {dagger1add::%loop-player%}
				add 0.05 to {dagger2add::%loop-player%}
				add 0.05 to {dagger3add::%loop-player%}
				add 0.05 to {dagger4add::%loop-player%}
				set {Dagg1::%loop-player%} to location {dagger1add::%loop-player%} blocks infront of {Dagg1::%loop-player%}
				set {Dagg2::%loop-player%} to location {dagger2add::%loop-player%} blocks infront of {Dagg2::%loop-player%}
				set {Dagg3::%loop-player%} to location {dagger3add::%loop-player%} blocks infront of {Dagg3::%loop-player%}
				set {Dagg4::%loop-player%} to location {dagger4add::%loop-player%} blocks infront of {Dagg4::%loop-player%}
				set {Dagg5::%loop-player%} to location 1.4 blocks to the left and 0.2 blocks infront of loop-player
				loop all entities in radius 200 of loop-player:
					if {Dagger1::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg1::%loop-player%}
					if {Dagger2::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg2::%loop-player%}
					if {Dagger3::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg3::%loop-player%}
					if {Dagger4::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg4::%loop-player%}
					if {Dagger5::%loop-entity-2%} is true:
						teleport loop-entity-2 to {Dagg5::%loop-player%}

			if {ShootDaggers..%loop-player%} is 1:
				remove 20 from {DaggerBarPro::%loop-player%}
				add 0.05 to {dagger1add::%loop-player%}
				add 0.05 to {dagger2add::%loop-player%}
				add 0.05 to {dagger3add::%loop-player%}
				add 0.05 to {dagger4add::%loop-player%}
				add 0.05 to {dagger5add::%loop-player%}
				set {Dagg1::%loop-player%} to location {dagger1add::%loop-player%} blocks infront of {Dagg1::%loop-player%}
				set {Dagg2::%loop-player%} to location {dagger2add::%loop-player%} blocks infront of {Dagg2::%loop-player%}
				set {Dagg3::%loop-player%} to location {dagger3add::%loop-player%} blocks infront of {Dagg3::%loop-player%}
				set {Dagg4::%loop-player%} to location {dagger4add::%loop-player%} blocks infront of {Dagg4::%loop-player%}
				set {Dagg5::%loop-player%} to location {dagger5add::%loop-player%} blocks infront of {Dagg5::%loop-player%}
				loop all entities in radius 200 of loop-player:
					if {Dagger1::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg1::%loop-player%}
					if {Dagger2::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg2::%loop-player%}
					if {Dagger3::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg3::%loop-player%}
					if {Dagger4::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg4::%loop-player%}
					if {Dagger5::%loop-entity-2%} is true:
						make 5 of dust using dustOption(rgb(138, 43, 226), 1) at location 2 block above loop-entity-2 with offset vector(0, 0, 0) with extra 0
						teleport loop-entity-2 to {Dagg5::%loop-player%}
					set {Daggers.on.%{_uuid}%} to false

command /fixdaggers <player>:
	permission: op
	trigger:
		set {_uuid} to uuid of arg-1
		set {Daggers.on.%{_uuid}%} to false
		set {Daggers..%player%} to false
every 1 tick:
	loop all players:
		if {Tag..%loop-player%} > 0:
			send action bar "🔒 &8&lDISABLED: %{Tag..%loop-player%}%s" to loop-player

every 1 second:
	loop all players:
		if {Tag..%loop-player%} > 0:
			apply darkness to loop-player for 1 second
			remove 1 from {Tag..%loop-player%}
		if {Daggers.on.%{_uuid}%} is not set:
			set {Daggers.on.%{_uuid}%} to false
		if {Daggers..%loop-player%} is not set:
			set {Daggers..%loop-player%} to false

	loop all players:
		set {_uuid} to uuid of loop-player
		if {Daggers.on.%{_uuid}%} is not set:
			set {Daggers.on.%{_uuid}%} to false
		


on damage:
	if victim has a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		chance of 10%
		cancel event
		apply invisibility to victim for 15 ticks
	if victim has a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		chance of 15%
		cancel event
		apply invisibility to victim for 15 ticks
on drop amethyst shard:
	cancel event
on drop prismarine shard:
	cancel event

on damage:
	if {ghoost...%victim%} is true:
		set victim's fly mode to false
		set {ghoost...%victim%} to false

on left click:
	if clicked block is set:
		if player's held item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			if {Sneaky...%player%} is true:
				if {Entity,%player%} is 1:
					spawn {entity.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
				if {Entity,%player%} is 2:
					spawn {entity2.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
				if {Entity,%player%} is 3:
					spawn {entity3.%player%} 1 block above event-block
					remove 1 from {Entity,%player%}
		if player's held item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
			if {Sneaky...%player%} is true:
				if {Entity,%player%} is 1:
					spawn {entity.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
				if {Entity,%player%} is 2:
					spawn {entity2.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
				if {Entity,%player%} is 3:
					spawn {entity3.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
				if {Entity,%player%} is 4:
					spawn {entity4.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
				if {Entity,%player%} is 5:
					spawn {entity5.%player%} 1 block above event-block
					remove 1 from {Entity,%player%} 
on sneak toggle:
	set {Sneaky...%player%} to true
	wait 10 seconds
	set {Sneaky...%player%} to false

on right click on entity:
	if player's held item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		if {Sneaky...%player%} is true:
			if event-entity is a villager:
				if {Entity,%player%} is 1:
					set {entity.%player%} to event-entity's type
				if {Entity,%player%} is 2:
					set {entity2.%player%} to event-entity's type
				if {Entity,%player%} is 3:
					set {entity3.%player%} to event-entity's type



on death:
	if attacker's off hand item is a amethyst shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		if {Entity,%attacker%} is not 3:
			add 1 to {Entity,%attacker%}
			send "&c%{Entity,%attacker%}%" to attacker
		if victim is a zombie:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to zombie
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to zombie
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to zombie
		if victim is a powered creeper:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to powered creeper
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to powered creeper
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to powered creeper
		if victim is a skeleton:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to skeleton
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to skeleton
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to skeleton
		if victim is a spider:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to spider
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to spider
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to spider
		if victim is a warden:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to warden
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to warden
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to warden
		if victim is a villager:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to villager
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to villager
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to villager
		if victim is a wither skeleton:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to wither skeleton
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to wither skeleton
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to wither skeleton
		if victim is a chicken:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to chicken
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to chicken
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to chicken
		if victim is a piglin:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to piglin
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to piglin
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to piglin
		if victim is a creeper:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to  creeper
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to creeper
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to powered creeper
		if victim is a cow:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to cow
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to cow
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to cow
		if victim is a pig:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to pig
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to pig
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to pig
		if victim is a iron golem:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to iron golem
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to iron golem
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to iron golem
	if attacker's off hand item is a prismarine shard named "<##A01FFF>&lᴀsᴛʀᴀ &r<##C7C7C7>ɢᴇᴍ":
		if {Entity,%attacker%} is not 3:
			add 1 to {Entity,%attacker%}
			send "&c%{Entity,%attacker%}%" to attacker
		if victim is a zombie:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to zombie
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to zombie
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to zombie
		if victim is a powered creeper:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to powered creeper
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to powered creeper
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to powered creeper
		if victim is a skeleton:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to skeleton
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to skeleton
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to skeleton
		if victim is a spider:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to spider
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to spider
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to spider
		if victim is a warden:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to warden
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to warden
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to warden
		if victim is a villager:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to villager
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to villager
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to villager
		if victim is a wither skeleton:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to wither skeleton
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to wither skeleton
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to wither skeleton
		if victim is a chicken:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to chicken
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to chicken
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to chicken
		if victim is a piglin:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to piglin
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to piglin
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to piglin
		if victim is a creeper:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to creeper
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to creeper
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to creeper
		if victim is a cow:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to cow
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to cow
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to cow
		if victim is a pig:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to pig
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to pig
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to pig
		if victim is a iron golem:
			if {Entity,%attacker%} is 1:
				set {entity.%attacker%} to iron golem
			if {Entity,%attacker%} is 2:
				set {entity2.%attacker%} to iron golem
			if {Entity,%attacker%} is 3:
				set {entity3.%attacker%} to iron golem



